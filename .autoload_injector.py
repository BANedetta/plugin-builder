import os
import re
import yaml

def find_namespace_and_insert_require(plugin_yml_path, src_path):
	try:
		# –ß–∏—Ç–∞–µ–º plugin.yml
		with open(plugin_yml_path, "r", encoding="utf-8") as file:
			config = yaml.safe_load(file)
	except FileNotFoundError:
		print("‚ùå –§–∞–π–ª plugin.yml –Ω–µ –Ω–∞–π–¥–µ–Ω.")
		return
	except yaml.YAMLError as e:
		print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ YAML: {e}")
		return

	# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –≥–ª–∞–≤–Ω–æ–º—É –∫–ª–∞—Å—Å—É
	main_class_path = config.get("main", "").replace("\\", "/") + ".php"
	class_file_path = os.path.join(src_path, main_class_path)

	if not os.path.exists(class_file_path):
		print(f"‚ùå –§–∞–π–ª {class_file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
		return

	try:
		with open(class_file_path, "r", encoding="utf-8") as file:
			content = file.readlines()
	except Exception as e:
		print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
		return

	namespace = None
	namespace_index = None

	for i, line in enumerate(content):
		match = re.match(r"namespace\s+([\w\\]+);", line)

		if match:
			namespace = match.group(1).split("\\")
			namespace_index = i
			break

	if not namespace:
		print("‚ùå Namespace –Ω–µ –Ω–∞–π–¥–µ–Ω.")
		return

	# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º require_once —Å—Ç—Ä–æ–∫–∏
	require_depth = len(namespace) + 1
	requires = f"\nrequire_once __DIR__ . '{'/..' * require_depth}/autoload.php';\n"

	# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ require_once
	if any("require_once" in line for line in content):
		print("‚úÖ require_once —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
		return

	# –í—Å—Ç–∞–≤–ª—è–µ–º require_once –ø–æ—Å–ª–µ namespace
	content.insert(namespace_index + 1, requires)

	try:
		with open(class_file_path, "w", encoding="utf-8") as file:
			file.writelines(content)
		print(f"üéâ –§–∞–π–ª {class_file_path} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
	except Exception as e:
		print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª: {e}")

plugin_yml_path = "plugin.yml"
src_path = "src"

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
if __name__ == "__main__":
	find_namespace_and_insert_require(plugin_yml_path, src_path)
